var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.437,1,1.646]],["body/controllers/AppController.html",[0,2.212,1,2.533,2,1.347,3,0.522,4,0.438,5,0.438,6,2.723,7,0.812,8,1.717,9,4.023,10,1.987,11,0.048,12,1.051,13,3.362,14,1.191,15,2.533,16,0.665,17,0.708,18,2.142,19,2.723,20,0.522,21,0.217,22,2.723,23,2.302,24,1.736,25,3.362,26,0.037,27,0.037]],["title/modules/AppModule.html",[28,0.767,29,1.646]],["body/modules/AppModule.html",[1,2.115,2,1.198,3,0.311,4,0.261,5,0.261,11,0.048,16,0.789,17,0.421,18,2.307,19,1.62,20,0.311,21,0.129,26,0.026,27,0.026,28,0.823,29,3.089,30,0.709,31,1.059,32,1.62,33,1.62,34,1.62,35,1.62,36,2.301,37,2.024,38,2.024,39,2.024,40,1.357,41,0.908,42,0.908,43,2.001,44,1.767,45,1.847,46,1.767,47,2.001,48,2.99,49,3.97,50,1.62,51,1.37,52,1.182,53,1.059,54,1.62,55,1.059,56,2.001,57,2.001,58,2.001,59,2.001,60,1.62,61,2.001,62,2.99,63,2.001,64,2.001,65,2.001,66,1.37,67,2.001,68,2.001,69,2.001,70,0.908,71,2.001,72,2.001,73,2.001,74,2.001,75,2.001,76,2.001,77,1.62,78,2.001,79,2.001,80,2.001,81,2.001,82,2.001,83,2.001,84,2.001,85,2.046,86,2.001,87,2.001]],["title/injectables/AppService.html",[18,1.264,88,0.767]],["body/injectables/AppService.html",[3,0.552,4,0.464,5,0.464,7,0.86,8,1.78,9,4.106,11,0.047,12,1.113,14,1.26,15,2.625,16,0.552,17,0.749,18,2.016,20,0.552,21,0.23,24,1.837,26,0.038,27,0.038,88,1.223,89,1.837,90,2.881,91,3.558,92,3.558,93,3.558]],["title/classes/BaseRepository.html",[21,0.18,94,1.437]],["body/classes/BaseRepository.html",[3,0.369,4,0.31,5,0.31,7,0.574,8,1.358,11,0.048,12,1.347,14,1.2,16,0.526,20,0.369,21,0.153,24,1.749,26,0.029,27,0.029,70,2.15,94,1.749,95,1.404,96,1.924,97,1.358,98,2.334,99,2.444,100,2.32,101,2.32,102,1.404,103,3.389,104,3.241,105,3.389,106,2.039,107,1.794,108,1.525,109,2.039,110,2.32,111,3.598,112,2.376,113,2.32,114,2.32,115,2.223,116,2.32,117,1.794,118,2.376,119,1.404,120,1.404,121,1.226,122,2.376,123,2.376,124,2.376,125,2.376,126,2.376]],["title/modules/PresentationModule.html",[28,0.767,36,1.437]],["body/modules/PresentationModule.html",[2,1.685,3,0.507,4,0.426,5,0.426,11,0.047,16,0.722,17,0.687,20,0.507,21,0.211,26,0.036,27,0.036,28,1.158,30,1.156,31,1.489,36,2.687,38,2.363,40,1.909,41,1.482,42,1.482,45,2.171,60,2.644,127,3.264,128,3.264,129,3.264,130,2.749,131,3.264,132,2.235]],["title/classes/Role.html",[21,0.18,53,0.986]],["body/classes/Role.html",[3,0.389,4,0.327,5,0.327,7,0.606,10,2.608,11,0.047,12,1.38,15,2.608,16,0.547,20,0.389,21,0.162,26,0.03,27,0.03,53,1.247,55,1.563,66,1.717,85,2.411,95,1.483,97,1.411,99,2.101,107,1.848,108,1.563,120,1.483,121,1.295,133,2.032,134,2.081,135,4.07,136,4.07,137,2.786,138,2.852,139,3.296,140,2.509,141,2.509,142,2.509,143,2.032,144,2.852,145,2.852,146,2.852,147,2.852,148,2.852,149,2.852,150,2.852,151,2.509,152,2.411,153,3.574,154,2.032,155,2.852,156,2.509,157,2.032,158,2.032,159,1.717,160,2.852,161,2.032]],["title/injectables/RoleRepository.html",[88,0.767,162,1.264]],["body/injectables/RoleRepository.html",[3,0.403,4,0.339,5,0.339,7,0.627,8,1.445,11,0.047,12,1.401,14,1.277,16,0.644,17,0.546,20,0.403,21,0.168,26,0.031,27,0.031,53,0.919,70,2.034,88,0.994,89,1.34,94,2.515,97,1.445,98,2.132,99,1.862,100,2.469,101,2.469,102,2.45,104,1.777,106,1.862,107,1.638,108,1.468,109,1.862,110,1.777,111,3.421,113,2.469,114,2.469,115,1.862,116,1.777,117,1.638,119,1.534,134,2.132,162,1.638,163,2.102,164,2.596,165,3.357,166,2.102,167,2.102,168,2.102,169,2.596,170,2.102,171,2.596]],["title/modules/RolesModule.html",[28,0.767,37,1.264]],["body/modules/RolesModule.html",[2,1.219,3,0.472,4,0.397,5,0.397,11,0.048,16,0.742,17,0.641,20,0.472,21,0.196,26,0.034,27,0.034,28,1.106,30,1.077,31,1.422,37,2.364,40,1.824,41,1.381,42,1.381,44,2.374,45,1.571,46,2.374,51,2.083,52,1.798,53,1.077,162,2.487,172,2.464,173,2.464,174,2.464,175,3.043,176,3.043,177,3.043,178,3.043]],["title/modules/UseCasesModule.html",[28,0.767,38,1.264]],["body/modules/UseCasesModule.html",[3,0.439,4,0.368,5,0.368,11,0.047,16,0.721,17,0.595,20,0.439,21,0.182,26,0.033,27,0.033,28,1.053,30,1,31,1.354,37,2.27,38,2.44,39,2.27,40,1.735,41,1.283,42,1.283,44,2.259,45,1.973,46,2.259,132,1.934,179,2.288,180,2.825,181,2.288,182,2.288,183,2.459,184,2.825,185,2.825,186,2.288,187,2.825,188,2.825]],["title/classes/User.html",[21,0.18,55,0.986]],["body/classes/User.html",[3,0.169,4,0.142,5,0.142,7,0.263,10,3.029,11,0.048,12,1.603,15,2.983,16,0.285,20,0.169,21,0.07,26,0.016,27,0.016,53,0.993,55,0.651,66,0.745,77,1.931,85,1.258,95,0.643,97,0.736,99,1.231,108,1.815,117,1.859,120,0.643,121,0.561,134,1.086,137,0.745,138,3.079,139,4.131,143,0.881,144,1.488,145,1.488,146,1.488,147,1.488,148,1.488,149,1.488,150,1.488,152,1.258,153,4.15,154,0.881,155,1.488,157,0.881,158,0.881,159,1.633,160,3.568,161,3.693,189,0.881,190,2.385,191,2.385,192,2.385,193,2.385,194,2.385,195,2.385,196,2.385,197,2.385,198,2.385,199,2.385,200,2.385,201,2.385,202,2.385,203,2.385,204,2.385,205,2.385,206,2.385,207,2.385,208,2.385,209,2.385,210,2.385,211,2.385,212,2.385,213,2.385,214,2.385,215,2.385,216,2.385,217,1.088,218,4.315,219,1.088,220,1.088,221,1.088,222,1.088,223,1.088,224,1.088,225,1.088,226,1.088,227,1.088,228,1.088,229,1.088,230,1.088,231,1.088,232,1.088,233,1.088,234,1.088,235,1.088,236,1.088,237,1.088,238,1.088,239,1.088,240,1.088,241,1.088,242,1.088,243,1.088,244,1.088,245,1.088,246,1.088,247,1.088]],["title/controllers/UserController.html",[0,1.437,130,1.646]],["body/controllers/UserController.html",[0,1.458,2,1.132,3,0.439,4,0.368,5,0.368,7,0.682,8,1.532,10,1.67,11,0.048,12,0.883,14,1,16,0.593,17,0.595,20,0.439,21,0.182,22,2.288,23,1.934,24,1.458,26,0.033,27,0.033,70,1.967,88,1.053,106,1.458,107,1.283,108,1.534,109,1.458,115,1.973,117,1.283,119,1.67,130,2.259,132,1.934,137,1.934,159,2.617,183,1.967,186,2.288,248,2.288,249,2.825,250,3.823,251,2.825,252,3.823,253,3.823,254,2.825,255,3.823,256,2.825,257,2.825,258,2.825,259,2.288,260,2.288,261,2.825,262,2.825,263,2.825,264,2.825]],["title/injectables/UserRepository.html",[88,0.767,265,1.264]],["body/injectables/UserRepository.html",[3,0.403,4,0.339,5,0.339,7,0.627,8,1.445,11,0.047,12,1.401,14,1.277,16,0.644,17,0.546,20,0.403,21,0.168,26,0.031,27,0.031,55,0.919,70,2.034,88,0.994,89,1.34,94,2.515,97,1.445,98,2.132,99,1.862,100,2.469,101,2.469,102,2.45,104,1.777,106,1.862,107,1.638,108,1.468,109,1.862,110,1.777,111,3.421,113,2.469,114,2.469,115,1.862,116,1.777,117,1.638,119,1.534,134,2.132,165,3.357,166,2.102,167,2.102,168,2.102,170,2.102,265,1.638,266,2.102,267,2.596,268,2.596,269,2.596]],["title/injectables/UserUseCase.html",[88,0.767,183,1.264]],["body/injectables/UserUseCase.html",[3,0.401,4,0.337,5,0.337,7,0.625,8,1.442,11,0.048,12,1.125,14,0.916,16,0.694,17,0.544,20,0.401,21,0.167,23,2.463,24,1.335,26,0.031,27,0.031,53,1.274,54,2.094,55,0.916,70,1.878,88,0.991,89,1.335,98,2.126,102,2.126,106,1.857,107,1.633,108,1.274,109,1.857,115,1.857,117,1.878,162,2.266,183,1.633,259,2.913,260,2.913,265,2.209,270,3.35,271,2.094,272,3.598,273,2.586,274,2.586,275,3.598,276,2.586,277,2.586,278,2.586,279,2.586,280,2.586,281,2.586,282,2.586,283,2.586,284,2.586,285,2.586]],["title/modules/UsersModule.html",[28,0.767,39,1.264]],["body/modules/UsersModule.html",[2,1.219,3,0.472,4,0.397,5,0.397,11,0.048,16,0.742,17,0.641,20,0.472,21,0.196,26,0.034,27,0.034,28,1.106,30,1.077,31,1.422,39,2.364,40,1.824,41,1.381,42,1.381,44,2.374,45,1.571,46,2.374,51,2.083,52,1.798,55,1.077,265,2.487,286,2.464,287,2.464,288,2.464,289,3.043,290,3.043,291,3.043,292,3.043]],["title/coverage.html",[293,2.591]],["body/coverage.html",[0,1.979,1,1.677,5,0.37,6,2.298,11,0.047,18,1.288,21,0.28,26,0.033,27,0.033,53,1.005,55,1.005,88,1.338,90,2.298,94,1.465,96,2.298,108,1.005,130,2.265,133,2.298,152,1.942,162,1.288,163,2.298,183,1.288,189,2.298,248,3.104,265,1.288,266,2.298,270,2.298,271,2.298,293,1.942,294,2.837,295,2.837,296,2.837,297,5.419,298,4.342,299,2.298,300,3.516,301,2.298,302,3.834,303,4.65,304,2.837,305,2.298,306,2.298,307,3.834,308,2.837,309,2.837]],["title/dependencies.html",[31,1.184,310,1.889]],["body/dependencies.html",[11,0.048,17,0.741,26,0.038,27,0.038,31,1.247,50,2.851,52,2.081,120,2.607,121,1.818,311,4.819,312,3.521,313,3.521,314,3.521,315,3.521,316,3.521,317,3.521,318,3.521,319,3.521,320,3.521,321,3.521,322,3.521,323,3.521,324,3.521,325,3.521,326,3.521,327,3.521]],["title/miscellaneous/functions.html",[328,1.889,329,2.709]],["body/miscellaneous/functions.html",[7,0.945,11,0.043,14,1.385,26,0.04,27,0.04,299,3.166,300,4.088,301,4.088,305,3.166,306,4.088,328,3.166,329,3.166,330,3.91,331,3.91]],["title/index.html",[7,0.564,332,2.333,333,2.333]],["body/index.html",[4,0.352,11,0.047,26,0.032,27,0.032,121,1.394,293,1.848,334,2.7,335,2.7,336,3.707,337,2.7,338,2.7,339,2.7,340,2.7,341,2.7,342,2.7,343,2.7,344,2.7,345,2.7,346,2.187,347,4.232,348,2.7,349,2.7,350,2.7,351,5.051,352,2.7,353,2.7,354,2.7,355,4.932,356,2.7,357,2.7,358,3.707,359,2.7,360,2.7,361,2.7,362,2.7,363,3.707,364,3.707,365,2.7,366,2.7,367,2.7,368,3.707,369,3.707,370,2.7,371,2.7,372,2.7,373,2.7,374,2.7,375,2.187,376,2.7,377,2.7,378,2.7,379,2.7,380,2.7,381,2.7,382,2.7,383,2.7,384,2.7,385,2.7,386,2.187,387,2.7,388,2.7,389,2.7,390,2.7,391,2.7,392,2.7,393,2.187]],["title/modules.html",[30,1.34]],["body/modules.html",[11,0.039,26,0.039,27,0.039,29,2.208,30,1.323,36,1.929,37,1.696,38,1.696,39,1.696,375,4.286,394,5.293,395,5.293,396,5.293]],["title/overview.html",[397,3.065]],["body/overview.html",[2,1.005,11,0.047,18,2.247,26,0.03,27,0.03,29,3.162,30,0.888,31,1.247,32,2.032,33,2.032,34,2.032,35,2.032,36,2.4,37,2.247,38,2.388,39,2.247,40,1.599,41,1.139,42,1.139,89,1.295,95,1.483,162,2.247,172,2.032,173,2.032,174,2.032,179,2.032,181,2.032,182,2.032,183,2.247,265,2.247,286,2.032,287,2.032,288,2.032,397,2.032,398,3.522,399,2.509,400,2.509]],["title/properties.html",[97,1.34,310,1.889]],["body/properties.html",[11,0.047,26,0.041,27,0.041,97,1.633,346,3.301,386,3.301,393,3.301,401,4.076,402,4.076,403,4.076]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BaseRepository.html":{},"modules/PresentationModule.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"modules/RolesModule.html":{},"modules/UseCasesModule.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserUseCase.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":297,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":402,"title":{},"body":{"properties.html":{}}}],["0.1.0",{"_index":316,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":321,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":302,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":298,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":307,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":304,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":303,"title":{},"body":{"coverage.html":{}}}],["1.1.0",{"_index":327,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":399,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":312,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":400,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":323,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":398,"title":{},"body":{"overview.html":{}}}],["5.22.3",{"_index":326,"title":{},"body":{"dependencies.html":{}}}],["6.6.3",{"_index":325,"title":{},"body":{"dependencies.html":{}}}],["7.5.1",{"_index":311,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":318,"title":{},"body":{"dependencies.html":{}}}],["abstract",{"_index":123,"title":{},"body":{"classes/BaseRepository.html":{}}}],["address",{"_index":190,"title":{},"body":{"classes/User.html":{}}}],["allownull",{"_index":154,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["allownull(false",{"_index":160,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["allownull(true",{"_index":161,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["allownull(undefined)@column",{"_index":139,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["amazing",{"_index":376,"title":{},"body":{"index.html":{}}}],["angular",{"_index":345,"title":{},"body":{"index.html":{}}}],["app",{"_index":353,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":342,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseRepository.html":{},"injectables/RoleRepository.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserUseCase.html":{}}}],["author",{"_index":386,"title":{},"body":{"index.html":{},"properties.html":{}}}],["await",{"_index":260,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserUseCase.html":{}}}],["backers",{"_index":377,"title":{},"body":{"index.html":{}}}],["base.repository",{"_index":170,"title":{},"body":{"injectables/RoleRepository.html":{},"injectables/UserRepository.html":{}}}],["baserepository",{"_index":94,"title":{"classes/BaseRepository.html":{}},"body":{"classes/BaseRepository.html":{},"injectables/RoleRepository.html":{},"injectables/UserRepository.html":{},"coverage.html":{}}}],["baserepository:11",{"_index":167,"title":{},"body":{"injectables/RoleRepository.html":{},"injectables/UserRepository.html":{}}}],["baserepository:15",{"_index":166,"title":{},"body":{"injectables/RoleRepository.html":{},"injectables/UserRepository.html":{}}}],["baserepository:5",{"_index":168,"title":{},"body":{"injectables/RoleRepository.html":{},"injectables/UserRepository.html":{}}}],["belongstomany",{"_index":155,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["belongstomany(undefined",{"_index":143,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["boolean",{"_index":138,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["bootstrap",{"_index":306,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":396,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":394,"title":{},"body":{"modules.html":{}}}],["building",{"_index":337,"title":{},"body":{"index.html":{}}}],["canlogin",{"_index":135,"title":{},"body":{"classes/Role.html":{}}}],["cases.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/PresentationModule.html":{}}}],["cases.module.ts",{"_index":185,"title":{},"body":{"modules/UseCasesModule.html":{}}}],["cases/user/user.usecase",{"_index":186,"title":{},"body":{"modules/UseCasesModule.html":{},"controllers/UserController.html":{}}}],["cases/user/user.usecase.ts",{"_index":271,"title":{},"body":{"injectables/UserUseCase.html":{},"coverage.html":{}}}],["cases/user/user.usecase.ts:13",{"_index":276,"title":{},"body":{"injectables/UserUseCase.html":{}}}],["cases/user/user.usecase.ts:7",{"_index":274,"title":{},"body":{"injectables/UserUseCase.html":{}}}],["class",{"_index":21,"title":{"classes/BaseRepository.html":{},"classes/Role.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BaseRepository.html":{},"modules/PresentationModule.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"modules/RolesModule.html":{},"modules/UseCasesModule.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserUseCase.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["classes",{"_index":95,"title":{},"body":{"classes/BaseRepository.html":{},"classes/Role.html":{},"classes/User.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_exports",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_presentationmodule",{"_index":127,"title":{},"body":{"modules/PresentationModule.html":{}}}],["cluster_presentationmodule_imports",{"_index":128,"title":{},"body":{"modules/PresentationModule.html":{}}}],["cluster_rolesmodule",{"_index":172,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule_exports",{"_index":173,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule_providers",{"_index":174,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_usecasesmodule",{"_index":179,"title":{},"body":{"modules/UseCasesModule.html":{},"overview.html":{}}}],["cluster_usecasesmodule_exports",{"_index":181,"title":{},"body":{"modules/UseCasesModule.html":{},"overview.html":{}}}],["cluster_usecasesmodule_imports",{"_index":180,"title":{},"body":{"modules/UseCasesModule.html":{}}}],["cluster_usecasesmodule_providers",{"_index":182,"title":{},"body":{"modules/UseCasesModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":286,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":287,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":288,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["column",{"_index":153,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["configmodule",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.database",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.host",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.password",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.port",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.username",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log(jaja.length",{"_index":284,"title":{},"body":{"injectables/UserUseCase.html":{}}}],["const",{"_index":259,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserUseCase.html":{}}}],["constructor",{"_index":102,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/RoleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UserUseCase.html":{}}}],["constructor(model",{"_index":103,"title":{},"body":{"classes/BaseRepository.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{}}}],["constructor(userrepository",{"_index":273,"title":{},"body":{"injectables/UserUseCase.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('users",{"_index":257,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/PresentationModule.html":{},"modules/RolesModule.html":{},"controllers/UserController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":293,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["currentsigninat",{"_index":191,"title":{},"body":{"classes/User.html":{}}}],["currentsigninip",{"_index":192,"title":{},"body":{"classes/User.html":{}}}],["data",{"_index":264,"title":{},"body":{"controllers/UserController.html":{}}}],["database",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["database/models/role.model",{"_index":176,"title":{},"body":{"modules/RolesModule.html":{}}}],["database/models/user.model",{"_index":290,"title":{},"body":{"modules/UsersModule.html":{}}}],["database/repositories/role.repository",{"_index":177,"title":{},"body":{"modules/RolesModule.html":{}}}],["database/repositories/user.repository",{"_index":291,"title":{},"body":{"modules/UsersModule.html":{}}}],["date",{"_index":218,"title":{},"body":{"classes/User.html":{}}}],["dateofbirth",{"_index":193,"title":{},"body":{"classes/User.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/Role.html":{},"classes/User.html":{},"controllers/UserController.html":{}}}],["default",{"_index":113,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/RoleRepository.html":{},"injectables/UserRepository.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/BaseRepository.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserUseCase.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/PresentationModule.html":{},"modules/RolesModule.html":{},"modules/UseCasesModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":346,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":354,"title":{},"body":{"index.html":{}}}],["dialect",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["displayname",{"_index":136,"title":{},"body":{"classes/Role.html":{}}}],["documentation",{"_index":294,"title":{},"body":{"coverage.html":{}}}],["e2e",{"_index":365,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":338,"title":{},"body":{"index.html":{}}}],["email",{"_index":194,"title":{},"body":{"classes/User.html":{}}}],["emailconfirmedat",{"_index":195,"title":{},"body":{"classes/User.html":{}}}],["encryptedpassword",{"_index":196,"title":{},"body":{"classes/User.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BaseRepository.html":{},"modules/PresentationModule.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"modules/RolesModule.html":{},"modules/UseCasesModule.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserUseCase.html":{},"modules/UsersModule.html":{}}}],["exports",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/RolesModule.html":{},"modules/UseCasesModule.html":{},"modules/UsersModule.html":{}}}],["express",{"_index":315,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":134,"title":{},"body":{"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["false",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BaseRepository.html":{},"modules/PresentationModule.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"modules/RolesModule.html":{},"modules/UseCasesModule.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserUseCase.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["findall",{"_index":100,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/RoleRepository.html":{},"injectables/UserRepository.html":{}}}],["findall(findoptions",{"_index":110,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/RoleRepository.html":{},"injectables/UserRepository.html":{}}}],["findbyid",{"_index":101,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/RoleRepository.html":{},"injectables/UserRepository.html":{}}}],["findbyid(id",{"_index":116,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/RoleRepository.html":{},"injectables/UserRepository.html":{}}}],["findoptions",{"_index":111,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/RoleRepository.html":{},"injectables/UserRepository.html":{}}}],["firstname",{"_index":197,"title":{},"body":{"classes/User.html":{}}}],["foreignkey",{"_index":149,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["framework",{"_index":336,"title":{},"body":{"index.html":{}}}],["function",{"_index":300,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":329,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gender",{"_index":198,"title":{},"body":{"classes/User.html":{}}}],["generic",{"_index":199,"title":{},"body":{"classes/User.html":{}}}],["get('getroles/:id",{"_index":253,"title":{},"body":{"controllers/UserController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getparameters",{"_index":250,"title":{},"body":{"controllers/UserController.html":{}}}],["getparameters(@param",{"_index":258,"title":{},"body":{"controllers/UserController.html":{}}}],["getparameters(params",{"_index":251,"title":{},"body":{"controllers/UserController.html":{}}}],["getting",{"_index":332,"title":{"index.html":{}},"body":{}}],["getuserroles",{"_index":272,"title":{},"body":{"injectables/UserUseCase.html":{}}}],["getuserroles(userid",{"_index":275,"title":{},"body":{"injectables/UserUseCase.html":{}}}],["grow",{"_index":372,"title":{},"body":{"index.html":{}}}],["hasbiometricreader",{"_index":200,"title":{},"body":{"classes/User.html":{}}}],["heavily",{"_index":343,"title":{},"body":{"index.html":{}}}],["hello",{"_index":92,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":383,"title":{},"body":{"index.html":{}}}],["host",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["https://nestjs.com",{"_index":390,"title":{},"body":{"index.html":{}}}],["id",{"_index":119,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/RoleRepository.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{}}}],["identification",{"_index":201,"title":{},"body":{"classes/User.html":{}}}],["identifier",{"_index":295,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BaseRepository.html":{},"modules/PresentationModule.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"modules/RolesModule.html":{},"modules/UseCasesModule.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserUseCase.html":{},"modules/UsersModule.html":{}}}],["imports",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/PresentationModule.html":{},"modules/RolesModule.html":{},"modules/UseCasesModule.html":{},"modules/UsersModule.html":{}}}],["include",{"_index":281,"title":{},"body":{"injectables/UserUseCase.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/BaseRepository.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserUseCase.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BaseRepository.html":{},"modules/PresentationModule.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"modules/RolesModule.html":{},"modules/UseCasesModule.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserUseCase.html":{},"modules/UsersModule.html":{}}}],["infrastructure/config/configuration",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["infrastructure/database/models/role.model",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserUseCase.html":{}}}],["infrastructure/database/models/user.model",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["infrastructure/database/repositories/role.repository",{"_index":278,"title":{},"body":{"injectables/UserUseCase.html":{}}}],["infrastructure/database/repositories/user.repository",{"_index":279,"title":{},"body":{"injectables/UserUseCase.html":{}}}],["infrastructure/ioc/presentation.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["infrastructure/ioc/roles.module",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["infrastructure/ioc/use",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["infrastructure/ioc/users.module",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["inherited",{"_index":165,"title":{},"body":{"injectables/RoleRepository.html":{},"injectables/UserRepository.html":{}}}],["inject",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["injectable",{"_index":88,"title":{"injectables/AppService.html":{},"injectables/RoleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UserUseCase.html":{}},"body":{"injectables/AppService.html":{},"injectables/RoleRepository.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserUseCase.html":{},"coverage.html":{}}}],["injectables",{"_index":89,"title":{},"body":{"injectables/AppService.html":{},"injectables/RoleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UserUseCase.html":{},"overview.html":{}}}],["inspired",{"_index":344,"title":{},"body":{"index.html":{}}}],["installation",{"_index":350,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":352,"title":{},"body":{"index.html":{}}}],["isglobal",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["jaja",{"_index":282,"title":{},"body":{"injectables/UserUseCase.html":{}}}],["join",{"_index":379,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":387,"title":{},"body":{"index.html":{}}}],["lastname",{"_index":202,"title":{},"body":{"classes/User.html":{}}}],["lastpasswordchangenotification",{"_index":203,"title":{},"body":{"classes/User.html":{}}}],["lastsigninat",{"_index":204,"title":{},"body":{"classes/User.html":{}}}],["lastsigninip",{"_index":205,"title":{},"body":{"classes/User.html":{}}}],["license",{"_index":393,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":369,"title":{},"body":{"index.html":{}}}],["literal",{"_index":252,"title":{},"body":{"controllers/UserController.html":{}}}],["load",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["logging",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["loginattempts",{"_index":206,"title":{},"body":{"classes/User.html":{}}}],["maritalstatus",{"_index":207,"title":{},"body":{"classes/User.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BaseRepository.html":{},"modules/PresentationModule.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"modules/RolesModule.html":{},"modules/UseCasesModule.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserUseCase.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["metadata",{"_index":320,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/BaseRepository.html":{},"injectables/RoleRepository.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserUseCase.html":{}}}],["miscellaneous",{"_index":328,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":368,"title":{},"body":{"index.html":{}}}],["mobile",{"_index":208,"title":{},"body":{"classes/User.html":{}}}],["mobileconfirmedat",{"_index":209,"title":{},"body":{"classes/User.html":{}}}],["mode",{"_index":358,"title":{},"body":{"index.html":{}}}],["model",{"_index":99,"title":{},"body":{"classes/BaseRepository.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["modelctor",{"_index":104,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/RoleRepository.html":{},"injectables/UserRepository.html":{}}}],["models",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["models/role.model",{"_index":169,"title":{},"body":{"injectables/RoleRepository.html":{}}}],["models/user.model",{"_index":268,"title":{},"body":{"injectables/UserRepository.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/PresentationModule.html":{},"modules/RolesModule.html":{},"modules/UseCasesModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PresentationModule.html":{},"modules/RolesModule.html":{},"modules/UseCasesModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/PresentationModule.html":{},"modules/RolesModule.html":{},"modules/UseCasesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":382,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":388,"title":{},"body":{"index.html":{}}}],["name",{"_index":107,"title":{},"body":{"classes/BaseRepository.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserUseCase.html":{}}}],["nest",{"_index":347,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":392,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/PresentationModule.html":{},"injectables/RoleRepository.html":{},"modules/RolesModule.html":{},"modules/UseCasesModule.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserUseCase.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":313,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":314,"title":{},"body":{"dependencies.html":{}}}],["nestjs/sequelize",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["new",{"_index":308,"title":{},"body":{"coverage.html":{}}}],["node.js",{"_index":335,"title":{},"body":{"index.html":{}}}],["npm",{"_index":351,"title":{},"body":{"index.html":{}}}],["number",{"_index":117,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/RoleRepository.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserUseCase.html":{}}}],["numofchildren",{"_index":210,"title":{},"body":{"classes/User.html":{}}}],["open",{"_index":370,"title":{},"body":{"index.html":{}}}],["optional",{"_index":109,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/RoleRepository.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserUseCase.html":{}}}],["otherkey",{"_index":146,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["out",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/PresentationModule.html":{},"modules/RolesModule.html":{},"modules/UseCasesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":397,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":310,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":256,"title":{},"body":{"controllers/UserController.html":{}}}],["parameters",{"_index":106,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/RoleRepository.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserUseCase.html":{}}}],["params",{"_index":255,"title":{},"body":{"controllers/UserController.html":{}}}],["password",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["passwordupdateat",{"_index":211,"title":{},"body":{"classes/User.html":{}}}],["personaldatahandling",{"_index":212,"title":{},"body":{"classes/User.html":{}}}],["pg",{"_index":317,"title":{},"body":{"dependencies.html":{}}}],["please",{"_index":380,"title":{},"body":{"index.html":{}}}],["port",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["postgres",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["prefix",{"_index":249,"title":{},"body":{"controllers/UserController.html":{}}}],["presentation/controllers/user.controller",{"_index":131,"title":{},"body":{"modules/PresentationModule.html":{}}}],["presentationmodule",{"_index":36,"title":{"modules/PresentationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PresentationModule.html":{},"modules.html":{},"overview.html":{}}}],["private",{"_index":98,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/RoleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UserUseCase.html":{}}}],["production",{"_index":360,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":334,"title":{},"body":{"index.html":{}}}],["project",{"_index":371,"title":{},"body":{"index.html":{}}}],["promise",{"_index":115,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/RoleRepository.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserUseCase.html":{}}}],["properties",{"_index":97,"title":{"properties.html":{}},"body":{"classes/BaseRepository.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"properties.html":{}}}],["providers",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/RolesModule.html":{},"modules/UseCasesModule.html":{},"modules/UsersModule.html":{}}}],["read",{"_index":381,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{},"injectables/UserUseCase.html":{}}}],["reflect",{"_index":319,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":349,"title":{},"body":{"index.html":{}}}],["reset",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/PresentationModule.html":{},"modules/RolesModule.html":{},"modules/UseCasesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BaseRepository.html":{},"modules/PresentationModule.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"modules/RolesModule.html":{},"modules/UseCasesModule.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserUseCase.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/BaseRepository.html":{},"controllers/UserController.html":{},"injectables/UserUseCase.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/BaseRepository.html":{},"injectables/RoleRepository.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserUseCase.html":{},"miscellaneous/functions.html":{}}}],["rimraf",{"_index":322,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":53,"title":{"classes/Role.html":{}},"body":{"modules/AppModule.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"modules/RolesModule.html":{},"classes/User.html":{},"injectables/UserUseCase.html":{},"coverage.html":{}}}],["role.model",{"_index":247,"title":{},"body":{"classes/User.html":{}}}],["role_id",{"_index":150,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["rolerepository",{"_index":162,"title":{"injectables/RoleRepository.html":{}},"body":{"injectables/RoleRepository.html":{},"modules/RolesModule.html":{},"injectables/UserUseCase.html":{},"coverage.html":{},"overview.html":{}}}],["roles",{"_index":159,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{},"controllers/UserController.html":{}}}],["roles.module",{"_index":187,"title":{},"body":{"modules/UseCasesModule.html":{}}}],["roles_users",{"_index":145,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["rolesmodule",{"_index":37,"title":{"modules/RolesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RolesModule.html":{},"modules/UseCasesModule.html":{},"modules.html":{},"overview.html":{}}}],["run",{"_index":355,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":324,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":339,"title":{},"body":{"index.html":{}}}],["sendnotifications",{"_index":213,"title":{},"body":{"classes/User.html":{}}}],["sequelize",{"_index":120,"title":{},"body":{"classes/BaseRepository.html":{},"classes/Role.html":{},"classes/User.html":{},"dependencies.html":{}}}],["sequelize/types",{"_index":122,"title":{},"body":{"classes/BaseRepository.html":{}}}],["sequelizemodule",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["sequelizemodule.forfeature([role",{"_index":178,"title":{},"body":{"modules/RolesModule.html":{}}}],["sequelizemodule.forfeature([user",{"_index":292,"title":{},"body":{"modules/UsersModule.html":{}}}],["sequelizemodule.forrootasync",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["server",{"_index":340,"title":{},"body":{"index.html":{}}}],["side",{"_index":341,"title":{},"body":{"index.html":{}}}],["signincount",{"_index":214,"title":{},"body":{"classes/User.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BaseRepository.html":{},"modules/PresentationModule.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"modules/RolesModule.html":{},"modules/UseCasesModule.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserUseCase.html":{},"modules/UsersModule.html":{},"index.html":{}}}],["sponsors",{"_index":374,"title":{},"body":{"index.html":{}}}],["src/.../configuration.ts",{"_index":331,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":330,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":90,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":91,"title":{},"body":{"injectables/AppService.html":{}}}],["src/infrastructure/config/configuration.ts",{"_index":299,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/infrastructure/database/models/role.model.ts",{"_index":133,"title":{},"body":{"classes/Role.html":{},"coverage.html":{}}}],["src/infrastructure/database/models/role.model.ts:15",{"_index":142,"title":{},"body":{"classes/Role.html":{}}}],["src/infrastructure/database/models/role.model.ts:19",{"_index":141,"title":{},"body":{"classes/Role.html":{}}}],["src/infrastructure/database/models/role.model.ts:23",{"_index":140,"title":{},"body":{"classes/Role.html":{}}}],["src/infrastructure/database/models/role.model.ts:31",{"_index":151,"title":{},"body":{"classes/Role.html":{}}}],["src/infrastructure/database/models/user.model.ts",{"_index":189,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/infrastructure/database/models/user.model.ts:102",{"_index":242,"title":{},"body":{"classes/User.html":{}}}],["src/infrastructure/database/models/user.model.ts:106",{"_index":228,"title":{},"body":{"classes/User.html":{}}}],["src/infrastructure/database/models/user.model.ts:110",{"_index":240,"title":{},"body":{"classes/User.html":{}}}],["src/infrastructure/database/models/user.model.ts:114",{"_index":217,"title":{},"body":{"classes/User.html":{}}}],["src/infrastructure/database/models/user.model.ts:118",{"_index":244,"title":{},"body":{"classes/User.html":{}}}],["src/infrastructure/database/models/user.model.ts:122",{"_index":231,"title":{},"body":{"classes/User.html":{}}}],["src/infrastructure/database/models/user.model.ts:130",{"_index":241,"title":{},"body":{"classes/User.html":{}}}],["src/infrastructure/database/models/user.model.ts:14",{"_index":225,"title":{},"body":{"classes/User.html":{}}}],["src/infrastructure/database/models/user.model.ts:18",{"_index":230,"title":{},"body":{"classes/User.html":{}}}],["src/infrastructure/database/models/user.model.ts:22",{"_index":222,"title":{},"body":{"classes/User.html":{}}}],["src/infrastructure/database/models/user.model.ts:26",{"_index":236,"title":{},"body":{"classes/User.html":{}}}],["src/infrastructure/database/models/user.model.ts:30",{"_index":245,"title":{},"body":{"classes/User.html":{}}}],["src/infrastructure/database/models/user.model.ts:34",{"_index":229,"title":{},"body":{"classes/User.html":{}}}],["src/infrastructure/database/models/user.model.ts:38",{"_index":226,"title":{},"body":{"classes/User.html":{}}}],["src/infrastructure/database/models/user.model.ts:42",{"_index":238,"title":{},"body":{"classes/User.html":{}}}],["src/infrastructure/database/models/user.model.ts:46",{"_index":235,"title":{},"body":{"classes/User.html":{}}}],["src/infrastructure/database/models/user.model.ts:50",{"_index":221,"title":{},"body":{"classes/User.html":{}}}],["src/infrastructure/database/models/user.model.ts:54",{"_index":224,"title":{},"body":{"classes/User.html":{}}}],["src/infrastructure/database/models/user.model.ts:58",{"_index":239,"title":{},"body":{"classes/User.html":{}}}],["src/infrastructure/database/models/user.model.ts:62",{"_index":243,"title":{},"body":{"classes/User.html":{}}}],["src/infrastructure/database/models/user.model.ts:66",{"_index":219,"title":{},"body":{"classes/User.html":{}}}],["src/infrastructure/database/models/user.model.ts:70",{"_index":232,"title":{},"body":{"classes/User.html":{}}}],["src/infrastructure/database/models/user.model.ts:74",{"_index":220,"title":{},"body":{"classes/User.html":{}}}],["src/infrastructure/database/models/user.model.ts:78",{"_index":233,"title":{},"body":{"classes/User.html":{}}}],["src/infrastructure/database/models/user.model.ts:82",{"_index":246,"title":{},"body":{"classes/User.html":{}}}],["src/infrastructure/database/models/user.model.ts:86",{"_index":223,"title":{},"body":{"classes/User.html":{}}}],["src/infrastructure/database/models/user.model.ts:90",{"_index":237,"title":{},"body":{"classes/User.html":{}}}],["src/infrastructure/database/models/user.model.ts:94",{"_index":234,"title":{},"body":{"classes/User.html":{}}}],["src/infrastructure/database/models/user.model.ts:98",{"_index":227,"title":{},"body":{"classes/User.html":{}}}],["src/infrastructure/database/repositories/base.repository.ts",{"_index":96,"title":{},"body":{"classes/BaseRepository.html":{},"coverage.html":{}}}],["src/infrastructure/database/repositories/base.repository.ts:11",{"_index":118,"title":{},"body":{"classes/BaseRepository.html":{}}}],["src/infrastructure/database/repositories/base.repository.ts:15",{"_index":112,"title":{},"body":{"classes/BaseRepository.html":{}}}],["src/infrastructure/database/repositories/base.repository.ts:5",{"_index":105,"title":{},"body":{"classes/BaseRepository.html":{}}}],["src/infrastructure/database/repositories/role.repository.ts",{"_index":163,"title":{},"body":{"injectables/RoleRepository.html":{},"coverage.html":{}}}],["src/infrastructure/database/repositories/role.repository.ts:6",{"_index":164,"title":{},"body":{"injectables/RoleRepository.html":{}}}],["src/infrastructure/database/repositories/user.repository.ts",{"_index":266,"title":{},"body":{"injectables/UserRepository.html":{},"coverage.html":{}}}],["src/infrastructure/database/repositories/user.repository.ts:6",{"_index":267,"title":{},"body":{"injectables/UserRepository.html":{}}}],["src/infrastructure/ioc/presentation.module.ts",{"_index":129,"title":{},"body":{"modules/PresentationModule.html":{}}}],["src/infrastructure/ioc/roles.module.ts",{"_index":175,"title":{},"body":{"modules/RolesModule.html":{}}}],["src/infrastructure/ioc/use",{"_index":184,"title":{},"body":{"modules/UseCasesModule.html":{}}}],["src/infrastructure/ioc/users.module.ts",{"_index":289,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/main.ts",{"_index":305,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/presentation/controllers/user.controller.ts",{"_index":248,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/presentation/controllers/user.controller.ts:11",{"_index":254,"title":{},"body":{"controllers/UserController.html":{}}}],["src/use",{"_index":270,"title":{},"body":{"injectables/UserUseCase.html":{},"coverage.html":{}}}],["start",{"_index":356,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":359,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":361,"title":{},"body":{"index.html":{}}}],["started",{"_index":333,"title":{"index.html":{}},"body":{}}],["starter",{"_index":348,"title":{},"body":{"index.html":{}}}],["statements",{"_index":296,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":262,"title":{},"body":{"controllers/UserController.html":{}}}],["stay",{"_index":384,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["success",{"_index":263,"title":{},"body":{"controllers/UserController.html":{}}}],["super(role",{"_index":171,"title":{},"body":{"injectables/RoleRepository.html":{}}}],["super(user",{"_index":269,"title":{},"body":{"injectables/UserRepository.html":{}}}],["supplierid",{"_index":215,"title":{},"body":{"classes/User.html":{}}}],["support",{"_index":375,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":395,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":152,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{},"coverage.html":{}}}],["tablename",{"_index":158,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":309,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":364,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":367,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":366,"title":{},"body":{"index.html":{}}}],["tests",{"_index":363,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":373,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.model",{"_index":124,"title":{},"body":{"classes/BaseRepository.html":{}}}],["this.model.findall(findoptions",{"_index":126,"title":{},"body":{"classes/BaseRepository.html":{}}}],["this.model.findbypk(id",{"_index":125,"title":{},"body":{"classes/BaseRepository.html":{}}}],["this.rolerepository.findall",{"_index":283,"title":{},"body":{"injectables/UserUseCase.html":{}}}],["this.userrepository.findbyid(userid",{"_index":280,"title":{},"body":{"injectables/UserUseCase.html":{}}}],["this.userusecase.getuserroles(params.id",{"_index":261,"title":{},"body":{"controllers/UserController.html":{}}}],["through",{"_index":144,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["timestamps",{"_index":148,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["touch",{"_index":385,"title":{},"body":{"index.html":{}}}],["true",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["twitter",{"_index":391,"title":{},"body":{"index.html":{}}}],["type",{"_index":108,"title":{},"body":{"classes/BaseRepository.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserUseCase.html":{},"coverage.html":{}}}],["typeofidentification",{"_index":216,"title":{},"body":{"classes/User.html":{}}}],["typescript",{"_index":121,"title":{},"body":{"classes/BaseRepository.html":{},"classes/Role.html":{},"classes/User.html":{},"dependencies.html":{},"index.html":{}}}],["underscored",{"_index":157,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["unit",{"_index":362,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":403,"title":{},"body":{"properties.html":{}}}],["unnamed",{"_index":301,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["use",{"_index":132,"title":{},"body":{"modules/PresentationModule.html":{},"modules/UseCasesModule.html":{},"controllers/UserController.html":{}}}],["usecasesmodule",{"_index":38,"title":{"modules/UseCasesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PresentationModule.html":{},"modules/UseCasesModule.html":{},"modules.html":{},"overview.html":{}}}],["usefactory",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":55,"title":{"classes/User.html":{}},"body":{"modules/AppModule.html":{},"classes/Role.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"injectables/UserUseCase.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["user.model",{"_index":156,"title":{},"body":{"classes/Role.html":{}}}],["user?.roles",{"_index":285,"title":{},"body":{"injectables/UserUseCase.html":{}}}],["user_id",{"_index":147,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["usercontroller",{"_index":130,"title":{"controllers/UserController.html":{}},"body":{"modules/PresentationModule.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["userid",{"_index":277,"title":{},"body":{"injectables/UserUseCase.html":{}}}],["username",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"classes/User.html":{}}}],["userrepository",{"_index":265,"title":{"injectables/UserRepository.html":{}},"body":{"injectables/UserRepository.html":{},"injectables/UserUseCase.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["users",{"_index":137,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{},"controllers/UserController.html":{}}}],["users.module",{"_index":188,"title":{},"body":{"modules/UseCasesModule.html":{}}}],["usersmodule",{"_index":39,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UseCasesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["userusecase",{"_index":183,"title":{"injectables/UserUseCase.html":{}},"body":{"modules/UseCasesModule.html":{},"controllers/UserController.html":{},"injectables/UserUseCase.html":{},"coverage.html":{},"overview.html":{}}}],["value",{"_index":114,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/RoleRepository.html":{},"injectables/UserRepository.html":{}}}],["version",{"_index":401,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":357,"title":{},"body":{"index.html":{}}}],["website",{"_index":389,"title":{},"body":{"index.html":{}}}],["world",{"_index":93,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":378,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/PresentationModule.html":{},"modules/RolesModule.html":{},"modules/UseCasesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nPresentationModule\n\nPresentationModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nPresentationModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nUseCasesModule\n\nUseCasesModule\n\nAppModule -->\n\nUseCasesModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService \n\nAppService \n\nAppService  -->\n\nAppModule->AppService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PresentationModule\n                        \n                        \n                            RolesModule\n                        \n                        \n                            UseCasesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AppService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { AppService } from './app.service';\nimport { Role } from './infrastructure/database/models/role.model';\nimport { User } from './infrastructure/database/models/user.model';\nimport { PresentationModule } from './infrastructure/ioc/presentation.module';\nimport { RolesModule } from './infrastructure/ioc/roles.module';\nimport { UseCasesModule } from './infrastructure/ioc/use-cases.module';\nimport { UsersModule } from './infrastructure/ioc/users.module';\nimport configuration from './infrastructure/config/configuration';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [configuration],\n    }),\n    SequelizeModule.forRootAsync({\n      useFactory: async (configService: ConfigService) => ({\n        dialect: 'postgres',\n        host: configService.get('database.host'),\n        port: configService.get('database.port'),\n        username: configService.get('database.username'),\n        password: configService.get('database.password'),\n        database: configService.get('database.database'),\n        models: [Role, User],\n        synchronize: false,\n        logging: false,\n      }),\n      imports: [ConfigModule],\n      inject: [ConfigService],\n    }),\n    UsersModule,\n    RolesModule,\n    PresentationModule,\n    UseCasesModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n  exports: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseRepository.html":{"url":"classes/BaseRepository.html","title":"class - BaseRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/database/repositories/base.repository.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(model: ModelCtor)\n                    \n                \n                        \n                            \n                                Defined in src/infrastructure/database/repositories/base.repository.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                    ModelCtor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModelCtor\n\n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/database/repositories/base.repository.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(findOptions: FindOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/database/repositories/base.repository.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    findOptions\n                                    \n                                            FindOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: number, findOptions: FindOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/database/repositories/base.repository.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    findOptions\n                                    \n                                            FindOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Model, ModelCtor } from 'sequelize-typescript';\nimport { FindOptions } from 'sequelize/types';\n\nexport abstract class BaseRepository {\n  private model: ModelCtor;\n\n  constructor(model: ModelCtor) {\n    this.model = model;\n  }\n\n  async findById(id: number, findOptions: FindOptions = {}): Promise {\n    return this.model.findByPk(id, findOptions);\n  }\n\n  async findAll(findOptions: FindOptions = {}): Promise {\n    return this.model.findAll(findOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PresentationModule.html":{"url":"modules/PresentationModule.html","title":"module - PresentationModule","body":"\n                   \n\n\n\n\n    Modules\n    PresentationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PresentationModule\n\n\n\ncluster_PresentationModule_imports\n\n\n\n\nUseCasesModule\n\nUseCasesModule\n\n\n\nPresentationModule\n\nPresentationModule\n\nPresentationModule -->\n\nUseCasesModule->PresentationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/infrastructure/ioc/presentation.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UseCasesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserController } from '../../presentation/controllers/user.controller';\nimport { UseCasesModule } from './use-cases.module';\n\n@Module({\n  imports: [UseCasesModule],\n  controllers: [UserController],\n})\nexport class PresentationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/database/models/role.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                canLogin\n                            \n                            \n                                displayName\n                            \n                            \n                                name\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        canLogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/database/models/role.model.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/database/models/role.model.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/database/models/role.model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsToMany(undefined, {through: 'roles_users', otherKey: 'user_id', timestamps: false, foreignKey: 'role_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/database/models/role.model.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Table,\n  Column,\n  Model,\n  AllowNull,\n  BelongsToMany,\n} from 'sequelize-typescript';\n\nimport { User } from './user.model';\n\n@Table({ underscored: true, tableName: 'roles' })\nexport class Role extends Model {\n  @AllowNull(false)\n  @Column\n  name: string;\n\n  @AllowNull(false)\n  @Column\n  displayName: string;\n\n  @AllowNull(true)\n  @Column\n  canLogin: boolean;\n\n  @BelongsToMany(() => User, {\n    through: 'roles_users',\n    otherKey: 'user_id',\n    timestamps: false,\n    foreignKey: 'role_id',\n  })\n  users: User[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleRepository.html":{"url":"injectables/RoleRepository.html","title":"injectable - RoleRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/database/repositories/role.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/infrastructure/database/repositories/role.repository.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(findOptions: FindOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:15\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    findOptions\n                                    \n                                            FindOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: number, findOptions: FindOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    findOptions\n                                    \n                                            FindOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModelCtor\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseRepository\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseRepository:5\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Role } from '../models/role.model';\n\nimport { BaseRepository } from './base.repository';\n@Injectable()\nexport class RoleRepository extends BaseRepository {\n  constructor() {\n    super(Role);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RolesModule.html":{"url":"modules/RolesModule.html","title":"module - RolesModule","body":"\n                   \n\n\n\n\n    Modules\n    RolesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_exports\n\n\n\ncluster_RolesModule_providers\n\n\n\n\nRoleRepository \n\nRoleRepository \n\n\n\nRolesModule\n\nRolesModule\n\nRoleRepository  -->\n\nRolesModule->RoleRepository \n\n\n\n\n\nRoleRepository\n\nRoleRepository\n\nRolesModule -->\n\nRoleRepository->RolesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/infrastructure/ioc/roles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoleRepository\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RoleRepository\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { Role } from '../database/models/role.model';\nimport { RoleRepository } from '../database/repositories/role.repository';\n\n@Module({\n  imports: [SequelizeModule.forFeature([Role])],\n  controllers: [],\n  providers: [RoleRepository],\n  exports: [RoleRepository],\n})\nexport class RolesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UseCasesModule.html":{"url":"modules/UseCasesModule.html","title":"module - UseCasesModule","body":"\n                   \n\n\n\n\n    Modules\n    UseCasesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UseCasesModule\n\n\n\ncluster_UseCasesModule_imports\n\n\n\ncluster_UseCasesModule_exports\n\n\n\ncluster_UseCasesModule_providers\n\n\n\n\nRolesModule\n\nRolesModule\n\n\n\nUseCasesModule\n\nUseCasesModule\n\nUseCasesModule -->\n\nRolesModule->UseCasesModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nUseCasesModule -->\n\nUsersModule->UseCasesModule\n\n\n\n\n\nUserUseCase \n\nUserUseCase \n\nUserUseCase  -->\n\nUseCasesModule->UserUseCase \n\n\n\n\n\nUserUseCase\n\nUserUseCase\n\nUseCasesModule -->\n\nUserUseCase->UseCasesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/infrastructure/ioc/use-cases.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserUseCase\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RolesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserUseCase\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserUseCase } from '../../use-cases/user/user.useCase';\nimport { RolesModule } from './roles.module';\nimport { UsersModule } from './users.module';\n\n@Module({\n  imports: [UsersModule, RolesModule],\n  providers: [UserUseCase],\n  exports: [UserUseCase],\n})\nexport class UseCasesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/database/models/user.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                currentSignInAt\n                            \n                            \n                                currentSignInIp\n                            \n                            \n                                dateOfBirth\n                            \n                            \n                                email\n                            \n                            \n                                emailConfirmedAt\n                            \n                            \n                                encryptedPassword\n                            \n                            \n                                firstName\n                            \n                            \n                                gender\n                            \n                            \n                                generic\n                            \n                            \n                                hasBiometricReader\n                            \n                            \n                                identification\n                            \n                            \n                                lastName\n                            \n                            \n                                lastPasswordChangeNotification\n                            \n                            \n                                lastSignInAt\n                            \n                            \n                                lastSignInIp\n                            \n                            \n                                loginAttempts\n                            \n                            \n                                maritalStatus\n                            \n                            \n                                mobile\n                            \n                            \n                                mobileConfirmedAt\n                            \n                            \n                                numOfChildren\n                            \n                            \n                                passwordUpdateAt\n                            \n                            \n                                personalDataHandling\n                            \n                            \n                                roles\n                            \n                            \n                                sendNotifications\n                            \n                            \n                                signInCount\n                            \n                            \n                                supplierId\n                            \n                            \n                                typeOfIdentification\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/database/models/user.model.ts:114\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentSignInAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/database/models/user.model.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentSignInIp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/database/models/user.model.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateOfBirth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/database/models/user.model.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/database/models/user.model.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emailConfirmedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/database/models/user.model.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encryptedPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/database/models/user.model.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/database/models/user.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/database/models/user.model.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generic\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/database/models/user.model.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasBiometricReader\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/database/models/user.model.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        identification\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/database/models/user.model.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/database/models/user.model.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastPasswordChangeNotification\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/database/models/user.model.ts:122\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastSignInAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/database/models/user.model.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastSignInIp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/database/models/user.model.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginAttempts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/database/models/user.model.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maritalStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/database/models/user.model.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/database/models/user.model.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mobileConfirmedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/database/models/user.model.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numOfChildren\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/database/models/user.model.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordUpdateAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/database/models/user.model.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        personalDataHandling\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/database/models/user.model.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsToMany(undefined, {through: 'roles_users', otherKey: 'role_id', timestamps: false, foreignKey: 'user_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/database/models/user.model.ts:130\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendNotifications\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/database/models/user.model.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signInCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/database/models/user.model.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        supplierId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/database/models/user.model.ts:118\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        typeOfIdentification\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/database/models/user.model.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/database/models/user.model.ts:82\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Table,\n  Column,\n  Model,\n  AllowNull,\n  BelongsToMany,\n} from 'sequelize-typescript';\nimport { Role } from './role.model';\n\n@Table({ underscored: true, tableName: 'users' })\nexport class User extends Model {\n  @AllowNull(false)\n  @Column\n  firstName: string;\n\n  @AllowNull(false)\n  @Column\n  lastName: string;\n\n  @AllowNull(false)\n  @Column\n  email: string;\n\n  @AllowNull(false)\n  @Column\n  mobile: string;\n\n  @AllowNull(true)\n  @Column\n  typeOfIdentification: string;\n\n  @AllowNull(true)\n  @Column\n  identification: number;\n\n  @AllowNull(true)\n  @Column\n  gender: string;\n\n  @AllowNull(true)\n  @Column\n  numOfChildren: number;\n\n  @AllowNull(true)\n  @Column\n  maritalStatus: string;\n\n  @AllowNull(true)\n  @Column\n  dateOfBirth: string;\n\n  @AllowNull(false)\n  @Column\n  encryptedPassword: string;\n\n  @AllowNull(false)\n  @Column\n  passwordUpdateAt: Date;\n\n  @AllowNull(true)\n  @Column\n  signInCount: number;\n\n  @AllowNull(true)\n  @Column\n  currentSignInAt: Date;\n\n  @AllowNull(true)\n  @Column\n  lastSignInAt: Date;\n\n  @AllowNull(true)\n  @Column\n  currentSignInIp: string;\n\n  @AllowNull(true)\n  @Column\n  lastSignInIp: string;\n\n  @AllowNull(false)\n  @Column\n  username: string;\n\n  @AllowNull(false)\n  @Column\n  emailConfirmedAt: Date;\n\n  @AllowNull(false)\n  @Column\n  mobileConfirmedAt: Date;\n\n  @AllowNull(false)\n  @Column\n  loginAttempts: number;\n\n  @AllowNull(false)\n  @Column\n  generic: boolean;\n\n  @AllowNull(false)\n  @Column\n  sendNotifications: boolean;\n\n  @AllowNull(false)\n  @Column\n  hasBiometricReader: boolean;\n\n  @AllowNull(true)\n  @Column\n  personalDataHandling: boolean;\n\n  @AllowNull(true)\n  @Column\n  address: string;\n\n  @AllowNull(true)\n  @Column\n  supplierId: number;\n\n  @AllowNull(true)\n  @Column\n  lastPasswordChangeNotification: Date;\n\n  @BelongsToMany(() => Role, {\n    through: 'roles_users',\n    otherKey: 'role_id',\n    timestamps: false,\n    foreignKey: 'user_id',\n  })\n  roles: Role[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/presentation/controllers/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getParameters\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getParameters\n                        \n                    \n                \n            \n            \n                \n                    \n                    getParameters(params: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('getRoles/:id')\n                \n            \n\n            \n                \n                    Defined in src/presentation/controllers/user.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Injectable, Param } from '@nestjs/common';\n\nimport { UserUseCase } from '../../use-cases/user/user.useCase';\n\n@Controller('users')\n@Injectable()\nexport class UserController {\n  constructor(private readonly userUseCase: UserUseCase) {}\n\n  @Get('getRoles/:id')\n  async getParameters(@Param() params: { id: number }): Promise {\n    const roles = await this.userUseCase.getUserRoles(params.id);\n    return {\n      status: 'Success',\n      data: {\n        roles,\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRepository.html":{"url":"injectables/UserRepository.html","title":"injectable - UserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/database/repositories/user.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/infrastructure/database/repositories/user.repository.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(findOptions: FindOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:15\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    findOptions\n                                    \n                                            FindOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: number, findOptions: FindOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    findOptions\n                                    \n                                            FindOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModelCtor\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseRepository\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseRepository:5\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { User } from '../models/user.model';\n\nimport { BaseRepository } from './base.repository';\n@Injectable()\nexport class UserRepository extends BaseRepository {\n  constructor() {\n    super(User);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserUseCase.html":{"url":"injectables/UserUseCase.html","title":"injectable - UserUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/use-cases/user/user.useCase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUserRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: UserRepository, roleRepository: RoleRepository)\n                    \n                \n                        \n                            \n                                Defined in src/use-cases/user/user.useCase.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleRepository\n                                                  \n                                                        \n                                                                        RoleRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserRoles\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserRoles(userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/use-cases/user/user.useCase.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { RoleRepository } from '../../infrastructure/database/repositories/role.repository';\nimport { Role } from '../../infrastructure/database/models/role.model';\nimport { UserRepository } from '../../infrastructure/database/repositories/user.repository';\n\n@Injectable()\nexport class UserUseCase {\n  constructor(\n    private readonly userRepository: UserRepository,\n    private readonly roleRepository: RoleRepository,\n  ) {}\n\n  async getUserRoles(userId: number): Promise {\n    const user = await this.userRepository.findById(userId, {\n      include: [Role],\n    });\n    const jaja = await this.roleRepository.findAll();\n    console.log(jaja.length);\n    return user?.roles;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUserRepository \n\nUserRepository \n\n\n\nUsersModule\n\nUsersModule\n\nUserRepository  -->\n\nUsersModule->UserRepository \n\n\n\n\n\nUserRepository\n\nUserRepository\n\nUsersModule -->\n\nUserRepository->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/infrastructure/ioc/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserRepository\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserRepository\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { User } from '../database/models/user.model';\nimport { UserRepository } from '../database/repositories/user.repository';\n\n@Module({\n  imports: [SequelizeModule.forFeature([User])],\n  controllers: [],\n  providers: [UserRepository],\n  exports: [UserRepository],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/infrastructure/config/configuration.ts\n            \n            function\n            Unnamed function\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infrastructure/database/models/role.model.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/infrastructure/database/models/user.model.ts\n            \n            class\n            User\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                src/infrastructure/database/repositories/base.repository.ts\n            \n            class\n            BaseRepository\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/infrastructure/database/repositories/role.repository.ts\n            \n            injectable\n            RoleRepository\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/infrastructure/database/repositories/user.repository.ts\n            \n            injectable\n            UserRepository\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/presentation/controllers/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/presentation/controllers/user.controller.ts\n            \n            injectable\n            UserController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/use-cases/user/user.useCase.ts\n            \n            injectable\n            UserUseCase\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.5.1\n        \n            @nestjs/config : ^2.0.0\n        \n            @nestjs/core : ^7.5.1\n        \n            @nestjs/platform-express : ^7.5.1\n        \n            @nestjs/sequelize : 0.1.0\n        \n            pg : 8.5.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.3\n        \n            sequelize : 5.22.3\n        \n            sequelize-typescript : 1.1.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            Unnamed function   (src/.../configuration.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/infrastructure/config/configuration.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Unnamed function\n                        \n                    \n                \n            \n            \n                \nUnnamed function()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PresentationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RolesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UseCasesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_exports\n\n\n\ncluster_RolesModule_providers\n\n\n\ncluster_UseCasesModule\n\n\n\ncluster_UseCasesModule_exports\n\n\n\ncluster_UseCasesModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nPresentationModule\n\nPresentationModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nPresentationModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\n\n\nUseCasesModule\n\nUseCasesModule\n\nUseCasesModule -->\n\nRolesModule->UseCasesModule\n\n\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nRoleRepository \n\nRoleRepository \n\nRoleRepository  -->\n\nRolesModule->RoleRepository \n\n\n\nPresentationModule -->\n\nUseCasesModule->PresentationModule\n\n\n\nAppModule -->\n\nUseCasesModule->AppModule\n\n\n\n\n\nUserUseCase \n\nUserUseCase \n\nUserUseCase  -->\n\nUseCasesModule->UserUseCase \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nUseCasesModule -->\n\nUsersModule->UseCasesModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUserRepository \n\nUserRepository \n\nUserRepository  -->\n\nUsersModule->UserRepository \n\n\n\n\n\nAppService \n\nAppService \n\nAppService  -->\n\nAppModule->AppService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nRoleRepository\n\nRoleRepository\n\nRolesModule -->\n\nRoleRepository->RolesModule\n\n\n\n\n\nUserUseCase\n\nUserUseCase\n\nUseCasesModule -->\n\nUserUseCase->UseCasesModule\n\n\n\n\n\nUserRepository\n\nUserRepository\n\nUsersModule -->\n\nUserRepository->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
